
{
  "openapi": "3.0.0",
  "info": {
    "title": "Travel Discovery App API",
    "version": "1.0.0",
    "description": "Complete API documentation for the Travel Discovery application with Supabase backend",
    "contact": {
      "name": "API Support",
      "email": "support@traveldiscovery.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "https://hrmklsvewmhpqixgyjmy.supabase.co/rest/v1",
      "description": "Production Supabase server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/locations": {
      "get": {
        "summary": "Get list of locations",
        "description": "Retrieve locations with optional filtering by city, category, and pagination",
        "tags": ["Locations"],
        "parameters": [
          {
            "name": "city",
            "in": "query",
            "description": "Filter locations by city name",
            "required": false,
            "schema": {
              "type": "string",
              "example": "New York"
            }
          },
          {
            "name": "category",
            "in": "query", 
            "description": "Filter locations by category",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["Restaurant", "Hotel", "Park", "Museum", "Cafe", "Bar"],
              "example": "Restaurant"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Number of results to skip for pagination",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid query parameters"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing authentication token"
          }
        }
      },
      "post": {
        "summary": "Create new location",
        "description": "Add a new location to the database",
        "tags": ["Locations"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateLocationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Location created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/profiles": {
      "get": {
        "summary": "Get user profiles",
        "description": "Retrieve user profile information",
        "tags": ["Users"],
        "responses": {
          "200": {
            "description": "Successfully retrieved profiles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Profile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user_analytics": {
      "post": {
        "summary": "Track analytics event",
        "description": "Record user behavior analytics event",
        "tags": ["Analytics"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalyticsEvent"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event tracked successfully"
          },
          "400": {
            "description": "Invalid event data"
          }
        }
      }
    },
    "/performance_metrics": {
      "post": {
        "summary": "Record performance metric",
        "description": "Log application performance metrics",
        "tags": ["Analytics"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PerformanceMetric"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Metric recorded successfully"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "description": "Unique location identifier"
          },
          "name": {
            "type": "string",
            "description": "Location name"
          },
          "description": {
            "type": "string",
            "nullable": true,
            "description": "Location description"
          },
          "category": {
            "type": "string",
            "description": "Location category"
          },
          "address": {
            "type": "string",
            "nullable": true,
            "description": "Physical address"
          },
          "city": {
            "type": "string",
            "nullable": true,
            "description": "City name"
          },
          "country": {
            "type": "string",
            "nullable": true,
            "description": "Country name"
          },
          "latitude": {
            "type": "number",
            "nullable": true,
            "description": "Latitude coordinate"
          },
          "longitude": {
            "type": "number",
            "nullable": true,
            "description": "Longitude coordinate"
          },
          "image_url": {
            "type": "string",
            "nullable": true,
            "description": "Location image URL"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          }
        },
        "required": ["id", "name", "category"]
      },
      "CreateLocationRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Location name"
          },
          "description": {
            "type": "string",
            "description": "Location description"
          },
          "category": {
            "type": "string",
            "description": "Location category"
          },
          "address": {
            "type": "string",
            "description": "Physical address"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "country": {
            "type": "string",
            "description": "Country name"
          },
          "latitude": {
            "type": "number",
            "description": "Latitude coordinate"
          },
          "longitude": {
            "type": "number",
            "description": "Longitude coordinate"
          },
          "image_url": {
            "type": "string",
            "description": "Location image URL"
          }
        },
        "required": ["name", "category"]
      },
      "Profile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "username": {
            "type": "string"
          },
          "full_name": {
            "type": "string",
            "nullable": true
          },
          "avatar_url": {
            "type": "string",
            "nullable": true
          },
          "bio": {
            "type": "string",
            "nullable": true
          },
          "current_city": {
            "type": "string",
            "nullable": true
          },
          "follower_count": {
            "type": "integer",
            "default": 0
          },
          "following_count": {
            "type": "integer",
            "default": 0
          },
          "places_visited": {
            "type": "integer",
            "default": 0
          },
          "cities_visited": {
            "type": "integer",
            "default": 0
          }
        }
      },
      "AnalyticsEvent": {
        "type": "object",
        "properties": {
          "event_type": {
            "type": "string",
            "description": "Type of event being tracked"
          },
          "event_data": {
            "type": "object",
            "description": "Additional event data"
          },
          "page_url": {
            "type": "string",
            "description": "Current page URL"
          },
          "session_id": {
            "type": "string",
            "description": "User session identifier"
          }
        },
        "required": ["event_type"]
      },
      "PerformanceMetric": {
        "type": "object",
        "properties": {
          "metric_type": {
            "type": "string",
            "description": "Type of performance metric"
          },
          "metric_value": {
            "type": "number",
            "description": "Metric value"
          },
          "metric_unit": {
            "type": "string",
            "description": "Unit of measurement"
          },
          "endpoint": {
            "type": "string",
            "description": "API endpoint or page"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metric data"
          }
        },
        "required": ["metric_type", "metric_value", "metric_unit"]
      }
    }
  }
}
